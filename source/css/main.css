@import"https://fonts.googleapis.com/css2?family=Work+Sans&display=swap";*,:before,:after {
    box-sizing: border-box;
    border-width: 0;
    border-style: solid;
    border-color: #e5e7eb
}

:before,:after {
    --tw-content: ""
}

html,:host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
    -o-tab-size: 4;
    tab-size: 4;
    font-family: ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";
    font-feature-settings: normal;
    font-variation-settings: normal;
    -webkit-tap-highlight-color: transparent
}

body {
    margin: 0;
    line-height: inherit
}

hr {
    height: 0;
    color: inherit;
    border-top-width: 1px
}

abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted
}

h1,h2,h3,h4,h5,h6 {
    font-size: inherit;
    font-weight: inherit
}

a {
    color: inherit;
    text-decoration: inherit
}

b,strong {
    font-weight: bolder
}

code,kbd,samp,pre {
    font-family: ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;
    font-feature-settings: normal;
    font-variation-settings: normal;
    font-size: 1em
}

small {
    font-size: 80%
}

sub,sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline
}

sub {
    bottom: -.25em
}

sup {
    top: -.5em
}

table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse
}

button,input,optgroup,select,textarea {
    font-family: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    font-size: 100%;
    font-weight: inherit;
    line-height: inherit;
    letter-spacing: inherit;
    color: inherit;
    margin: 0;
    padding: 0
}

button,select {
    text-transform: none
}

button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]) {
    -webkit-appearance: button;
    background-color: transparent;
    background-image: none
}

:-moz-focusring {
    outline: auto
}

:-moz-ui-invalid {
    box-shadow: none
}

progress {
    vertical-align: baseline
}

::-webkit-inner-spin-button,::-webkit-outer-spin-button {
    height: auto
}

[type=search] {
    -webkit-appearance: textfield;
    outline-offset: -2px
}

::-webkit-search-decoration {
    -webkit-appearance: none
}

::-webkit-file-upload-button {
    -webkit-appearance: button;
    font: inherit
}

summary {
    display: list-item
}

blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre {
    margin: 0
}

fieldset {
    margin: 0;
    padding: 0
}

legend {
    padding: 0
}

ol,ul,menu {
    list-style: none;
    margin: 0;
    padding: 0
}

dialog {
    padding: 0
}

textarea {
    resize: vertical
}

input::-moz-placeholder,textarea::-moz-placeholder {
    opacity: 1;
    color: #9ca3af
}

input::placeholder,textarea::placeholder {
    opacity: 1;
    color: #9ca3af
}

button,[role=button] {
    cursor: pointer
}

:disabled {
    cursor: default
}

img,svg,video,canvas,audio,iframe,embed,object {
    display: block;
    vertical-align: middle
}

img,video {
    max-width: 100%;
    height: auto
}

[hidden] {
    display: none
}

:root,[data-theme] {
    background-color: var(--fallback-b1,oklch(var(--b1)/1));
    color: var(--fallback-bc,oklch(var(--bc)/1))
}

@supports not (color: oklch(0% 0 0)) {
    :root {
        color-scheme:light;
        --fallback-p: #491eff;
        --fallback-pc: #d4dbff;
        --fallback-s: #ff41c7;
        --fallback-sc: #fff9fc;
        --fallback-a: #00cfbd;
        --fallback-ac: #00100d;
        --fallback-n: #2b3440;
        --fallback-nc: #d7dde4;
        --fallback-b1: #ffffff;
        --fallback-b2: #e5e6e6;
        --fallback-b3: #e5e6e6;
        --fallback-bc: #1f2937;
        --fallback-in: #00b3f0;
        --fallback-inc: #000000;
        --fallback-su: #00ca92;
        --fallback-suc: #000000;
        --fallback-wa: #ffc22d;
        --fallback-wac: #000000;
        --fallback-er: #ff6f70;
        --fallback-erc: #000000
    }

    @media (prefers-color-scheme: dark) {
        :root {
            color-scheme:dark;
            --fallback-p: #7582ff;
            --fallback-pc: #050617;
            --fallback-s: #ff71cf;
            --fallback-sc: #190211;
            --fallback-a: #00c7b5;
            --fallback-ac: #000e0c;
            --fallback-n: #2a323c;
            --fallback-nc: #a6adbb;
            --fallback-b1: #1d232a;
            --fallback-b2: #191e24;
            --fallback-b3: #15191e;
            --fallback-bc: #a6adbb;
            --fallback-in: #00b3f0;
            --fallback-inc: #000000;
            --fallback-su: #00ca92;
            --fallback-suc: #000000;
            --fallback-wa: #ffc22d;
            --fallback-wac: #000000;
            --fallback-er: #ff6f70;
            --fallback-erc: #000000
        }
    }
}

html {
    -webkit-tap-highlight-color: transparent
}

:root {
    color-scheme: dark;
    --b2: 19.3144% .037037 265.754874;
    --b3: 17.8606% .034249 265.754874;
    --bc: 84.1536% .007965 265.754874;
    --pc: 15.0703% .027798 232.66148;
    --sc: 13.6023% .031661 276.934902;
    --ac: 14.4721% .035244 350.048739;
    --nc: 85.5899% .00737 260.030984;
    --suc: 15.6904% .026506 181.911977;
    --wac: 16.6486% .027912 82.95003;
    --erc: 14.3572% .034051 13.11834;
    --rounded-box: 1rem;
    --rounded-btn: .5rem;
    --rounded-badge: 1.9rem;
    --animation-btn: .25s;
    --animation-input: .2s;
    --btn-focus-scale: .95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: .5rem;
    --p: 75.3513% .138989 232.66148;
    --s: 68.0113% .158303 276.934902;
    --a: 72.3603% .176218 350.048739;
    --n: 27.9495% .036848 260.030984;
    --b1: 20.7682% .039824 265.754874;
    --in: 68.4553% .148062 237.25135;
    --inc: 0% 0 0;
    --su: 78.452% .132529 181.911977;
    --wa: 83.2428% .139558 82.95003;
    --er: 71.7858% .170255 13.11834
}

[data-theme=night] {
    color-scheme: dark;
    --b2: 19.3144% .037037 265.754874;
    --b3: 17.8606% .034249 265.754874;
    --bc: 84.1536% .007965 265.754874;
    --pc: 15.0703% .027798 232.66148;
    --sc: 13.6023% .031661 276.934902;
    --ac: 14.4721% .035244 350.048739;
    --nc: 85.5899% .00737 260.030984;
    --suc: 15.6904% .026506 181.911977;
    --wac: 16.6486% .027912 82.95003;
    --erc: 14.3572% .034051 13.11834;
    --rounded-box: 1rem;
    --rounded-btn: .5rem;
    --rounded-badge: 1.9rem;
    --animation-btn: .25s;
    --animation-input: .2s;
    --btn-focus-scale: .95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: .5rem;
    --p: 75.3513% .138989 232.66148;
    --s: 68.0113% .158303 276.934902;
    --a: 72.3603% .176218 350.048739;
    --n: 27.9495% .036848 260.030984;
    --b1: 20.7682% .039824 265.754874;
    --in: 68.4553% .148062 237.25135;
    --inc: 0% 0 0;
    --su: 78.452% .132529 181.911977;
    --wa: 83.2428% .139558 82.95003;
    --er: 71.7858% .170255 13.11834
}

[data-theme=light] {
    color-scheme: light;
    --in: 72.06% .191 231.6;
    --su: 64.8% .15 160;
    --wa: 84.71% .199 83.87;
    --er: 71.76% .221 22.18;
    --pc: 89.824% .06192 275.75;
    --ac: 15.352% .0368 183.61;
    --inc: 0% 0 0;
    --suc: 0% 0 0;
    --wac: 0% 0 0;
    --erc: 0% 0 0;
    --rounded-box: 1rem;
    --rounded-btn: .5rem;
    --rounded-badge: 1.9rem;
    --animation-btn: .25s;
    --animation-input: .2s;
    --btn-focus-scale: .95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: .5rem;
    --p: 49.12% .3096 275.75;
    --s: 69.71% .329 342.55;
    --sc: 98.71% .0106 342.55;
    --a: 76.76% .184 183.61;
    --n: 32.1785% .02476 255.701624;
    --nc: 89.4994% .011585 252.096176;
    --b1: 100% 0 0;
    --b2: 96.1151% 0 0;
    --b3: 92.4169% .00108 197.137559;
    --bc: 27.8078% .029596 256.847952
}

*,:before,:after {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x: ;
    --tw-pan-y: ;
    --tw-pinch-zoom: ;
    --tw-scroll-snap-strictness: proximity;
    --tw-gradient-from-position: ;
    --tw-gradient-via-position: ;
    --tw-gradient-to-position: ;
    --tw-ordinal: ;
    --tw-slashed-zero: ;
    --tw-numeric-figure: ;
    --tw-numeric-spacing: ;
    --tw-numeric-fraction: ;
    --tw-ring-inset: ;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgb(59 130 246 / .5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur: ;
    --tw-brightness: ;
    --tw-contrast: ;
    --tw-grayscale: ;
    --tw-hue-rotate: ;
    --tw-invert: ;
    --tw-saturate: ;
    --tw-sepia: ;
    --tw-drop-shadow: ;
    --tw-backdrop-blur: ;
    --tw-backdrop-brightness: ;
    --tw-backdrop-contrast: ;
    --tw-backdrop-grayscale: ;
    --tw-backdrop-hue-rotate: ;
    --tw-backdrop-invert: ;
    --tw-backdrop-opacity: ;
    --tw-backdrop-saturate: ;
    --tw-backdrop-sepia: ;
    --tw-contain-size: ;
    --tw-contain-layout: ;
    --tw-contain-paint: ;
    --tw-contain-style:
}

::backdrop {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x: ;
    --tw-pan-y: ;
    --tw-pinch-zoom: ;
    --tw-scroll-snap-strictness: proximity;
    --tw-gradient-from-position: ;
    --tw-gradient-via-position: ;
    --tw-gradient-to-position: ;
    --tw-ordinal: ;
    --tw-slashed-zero: ;
    --tw-numeric-figure: ;
    --tw-numeric-spacing: ;
    --tw-numeric-fraction: ;
    --tw-ring-inset: ;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgb(59 130 246 / .5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur: ;
    --tw-brightness: ;
    --tw-contrast: ;
    --tw-grayscale: ;
    --tw-hue-rotate: ;
    --tw-invert: ;
    --tw-saturate: ;
    --tw-sepia: ;
    --tw-drop-shadow: ;
    --tw-backdrop-blur: ;
    --tw-backdrop-brightness: ;
    --tw-backdrop-contrast: ;
    --tw-backdrop-grayscale: ;
    --tw-backdrop-hue-rotate: ;
    --tw-backdrop-invert: ;
    --tw-backdrop-opacity: ;
    --tw-backdrop-saturate: ;
    --tw-backdrop-sepia: ;
    --tw-contain-size: ;
    --tw-contain-layout: ;
    --tw-contain-paint: ;
    --tw-contain-style:
}


/*sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss*/









.avatar.placeholder>div {
    display: flex;
    align-items: center;
    justify-content: center
}

@media (hover: hover) {
    .label a:hover {
        --tw-text-opacity: 1;
        color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)))
    }

    .table tr.hover:hover,.table tr.hover:nth-child(2n):hover {
        --tw-bg-opacity: 1;
        background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)))
    }

    .table-zebra tr.hover:hover,.table-zebra tr.hover:nth-child(2n):hover {
        --tw-bg-opacity: 1;
        background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)))
    }
}
































.btn-disabled,.btn[disabled],.btn:disabled {
    pointer-events: none
}

.btn-circle {
    height: 3rem;
    width: 3rem;
    border-radius: 9999px;
    padding: 0
}

:where(.btn:is(input[type=checkbox])),:where(.btn:is(input[type=radio])) {
    width: auto;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none
}

.btn:is(input[type=checkbox]):after,.btn:is(input[type=radio]):after {
    --tw-content: attr(aria-label);
    content: var(--tw-content)
}































.card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem)
}

.card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}

.card-body {
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    padding: var(--padding-card, 2rem);
    gap: .5rem
}

.card-body :where(p) {
    flex-grow: 1
}

.card-actions {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    gap: .5rem
}

.card figure {
    display: flex;
    align-items: center;
    justify-content: center
}

.card.image-full {
    display: grid
}

.card.image-full:before {
    position: relative;
    content: "";
    z-index: 10;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    opacity: .75
}

.card.image-full:before,.card.image-full>* {
    grid-column-start: 1;
    grid-row-start: 1
}

.card.image-full>figure img {
    height: 100%;
    -o-object-fit: cover;
    object-fit: cover
}

.card.image-full>.card-body {
    position: relative;
    z-index: 20;
    --tw-text-opacity: 1;
    color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)))
}

.checkbox {
    flex-shrink: 0;
    --chkbg: var(--fallback-bc,oklch(var(--bc)/1));
    --chkfg: var(--fallback-b1,oklch(var(--b1)/1));
    height: 1.5rem;
    width: 1.5rem;
    cursor: pointer;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    border-radius: var(--rounded-btn, .5rem);
    border-width: 1px;
    border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity)));
    --tw-border-opacity: .2
}

.divider {
    display: flex;
    flex-direction: row;
    align-items: center;
    align-self: stretch;
    margin-top: 1rem;
    margin-bottom: 1rem;
    height: 1rem;
    white-space: nowrap
}

.divider:before,.divider:after {
    height: .125rem;
    width: 100%;
    flex-grow: 1;
    --tw-content: "";
    content: var(--tw-content);
    background-color: var(--fallback-bc,oklch(var(--bc)/.1))
}

@media (hover: hover) {
    .btm-nav>*.disabled:hover,.btm-nav>*[disabled]:hover {
        pointer-events:none;
        --tw-border-opacity: 0;
        background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
        --tw-bg-opacity: .1;
        color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
        --tw-text-opacity: .2
    }

    .btn:hover {
        --tw-border-opacity: 1;
        border-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-border-opacity)));
        --tw-bg-opacity: 1;
        background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)))
    }

    @supports (color: color-mix(in oklab,black,black)) {
        .btn:hover {
            background-color:color-mix(in oklab,oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,black);
            border-color: color-mix(in oklab,oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,black)
        }
    }

    @supports not (color: oklch(0% 0 0)) {
        .btn:hover {
            background-color:var(--btn-color, var(--fallback-b2));
            border-color: var(--btn-color, var(--fallback-b2))
        }
    }

    .btn.glass:hover {
        --glass-opacity: 25%;
        --glass-border-opacity: 15%
    }

    .btn-outline.btn-info:hover {
        --tw-text-opacity: 1;
        color: var(--fallback-inc,oklch(var(--inc)/var(--tw-text-opacity)))
    }

    @supports (color: color-mix(in oklab,black,black)) {
        .btn-outline.btn-info:hover {
            background-color:color-mix(in oklab,var(--fallback-in,oklch(var(--in)/1)) 90%,black);
            border-color: color-mix(in oklab,var(--fallback-in,oklch(var(--in)/1)) 90%,black)
        }
    }

    .btn-disabled:hover,.btn[disabled]:hover,.btn:disabled:hover {
        --tw-border-opacity: 0;
        background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
        --tw-bg-opacity: .2;
        color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
        --tw-text-opacity: .2
    }

    @supports (color: color-mix(in oklab,black,black)) {
        .btn:is(input[type=checkbox]:checked):hover,.btn:is(input[type=radio]:checked):hover {
            background-color:color-mix(in oklab,var(--fallback-p,oklch(var(--p)/1)) 90%,black);
            border-color: color-mix(in oklab,var(--fallback-p,oklch(var(--p)/1)) 90%,black)
        }
    }
}

.footer {
    display: grid;
    width: 100%;
    grid-auto-flow: row;
    place-items: start;
    -moz-column-gap: 1rem;
    column-gap: 1rem;
    row-gap: 2.5rem;
    font-size: .875rem;
    line-height: 1.25rem
}

.footer>* {
    display: grid;
    place-items: start;
    gap: .5rem
}

@media (min-width: 48rem) {
    .footer {
        grid-auto-flow:column
    }

    .footer-center {
        grid-auto-flow: row dense
    }
}

.label {
    display: flex;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    align-items: center;
    justify-content: space-between;
    padding: .5rem .25rem
}

.hero {
    display: grid;
    width: 100%;
    place-items: center;
    background-size: cover;
    background-position: center
}

.hero>* {
    grid-column-start: 1;
    grid-row-start: 1
}

.hero-content {
    z-index: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    max-width: 80rem;
    gap: 1rem;
    padding: 1rem
}

.input {
    flex-shrink: 1;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    height: 3rem;
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: 1rem;
    line-height: 2;
    line-height: 1.5rem;
    border-radius: var(--rounded-btn, .5rem);
    border-width: 1px;
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)))
}

.input[type=number]::-webkit-inner-spin-button,.input-md[type=number]::-webkit-inner-spin-button {
    margin-top: -1rem;
    margin-bottom: -1rem;
    margin-inline-end:-1rem}

.link {
    cursor: pointer;
    text-decoration-line: underline
}

.menu li.disabled {
    cursor: not-allowed;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    color: var(--fallback-bc,oklch(var(--bc)/.3))
}

.mockup-code {
    position: relative;
    overflow: hidden;
    overflow-x: auto;
    min-width: 18rem;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    padding-top: 1.25rem;
    padding-bottom: 1.25rem;
    --tw-text-opacity: 1;
    color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)));
    direction: ltr
}

.mockup-code pre[data-prefix]:before {
    content: attr(data-prefix);
    display: inline-block;
    text-align: right;
    width: 2rem;
    opacity: .5
}

.mockup-window {
    position: relative;
    overflow: hidden;
    overflow-x: auto;
    display: flex;
    flex-direction: column;
    border-radius: var(--rounded-box, 1rem);
    padding-top: 1.25rem
}

.mockup-window pre[data-prefix]:before {
    content: attr(data-prefix);
    display: inline-block;
    text-align: right
}

.modal {
    pointer-events: none;
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: 0;
    display: grid;
    height: 100%;
    max-height: none;
    width: 100%;
    max-width: none;
    justify-items: center;
    padding: 0;
    opacity: 0;
    overscroll-behavior: contain;
    z-index: 999;
    background-color: transparent;
    color: inherit;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(0,0,.2,1);
    transition-property: transform,opacity,visibility;
    overflow-y: hidden
}

:where(.modal) {
    align-items: center
}

.modal-box {
    max-height: calc(100vh - 5em);
    grid-column-start: 1;
    grid-row-start: 1;
    width: 91.666667%;
    max-width: 32rem;
    --tw-scale-x: .9;
    --tw-scale-y: .9;
    transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-bottom-right-radius: var(--rounded-box, 1rem);
    border-bottom-left-radius: var(--rounded-box, 1rem);
    border-top-left-radius: var(--rounded-box, 1rem);
    border-top-right-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
    padding: 1.5rem;
    transition-property: color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;
    transition-property: color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;
    transition-property: color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(.4,0,.2,1);
    transition-timing-function: cubic-bezier(0,0,.2,1);
    transition-duration: .2s;
    box-shadow: #00000040 0 25px 50px -12px;
    overflow-y: auto;
    overscroll-behavior: contain
}

.modal-open,.modal:target,.modal-toggle:checked+.modal,.modal[open] {
    pointer-events: auto;
    visibility: visible;
    opacity: 1
}

.modal-toggle {
    position: fixed;
    height: 0px;
    width: 0px;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    opacity: 0
}

:root:has(:is(.modal-open,.modal:target,.modal-toggle:checked+.modal,.modal[open])) {
    overflow: hidden;
    scrollbar-gutter: stable
}

.stats {
    display: inline-grid;
    border-radius: var(--rounded-box, 1rem);
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)))
}

:where(.stats) {
    grid-auto-flow: column;
    overflow-x: auto
}

.stat {
    display: inline-grid;
    width: 100%;
    grid-template-columns: repeat(1,1fr);
    -moz-column-gap: 1rem;
    column-gap: 1rem;
    border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity)));
    --tw-border-opacity: .1;
    padding: 1rem 1.5rem
}

.stat-figure {
    grid-column-start: 2;
    grid-row: span 3 / span 3;
    grid-row-start: 1;
    place-self: center;
    justify-self: end
}

.stat-title {
    grid-column-start: 1;
    white-space: nowrap;
    color: var(--fallback-bc,oklch(var(--bc)/.6))
}

.stat-value {
    grid-column-start: 1;
    white-space: nowrap;
    font-size: 2.25rem;
    line-height: 2.5rem;
    font-weight: 800
}

.stat-desc {
    grid-column-start: 1;
    white-space: nowrap;
    font-size: .75rem;
    line-height: 1rem;
    color: var(--fallback-bc,oklch(var(--bc)/.6))
}

.steps {
    display: inline-grid;
    grid-auto-flow: column;
    overflow: hidden;
    overflow-x: auto;
    counter-reset: step;
    grid-auto-columns: 1fr
}

.steps .step {
    display: grid;
    grid-template-columns: repeat(1,minmax(0,1fr));
    grid-template-columns: auto;
    grid-template-rows: repeat(2,minmax(0,1fr));
    grid-template-rows: 40px 1fr;
    place-items: center;
    text-align: center;
    min-width: 4rem
}

.swap {
    position: relative;
    display: inline-grid;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    place-content: center;
    cursor: pointer
}

.swap>* {
    grid-column-start: 1;
    grid-row-start: 1;
    transition-duration: .3s;
    transition-timing-function: cubic-bezier(0,0,.2,1);
    transition-property: transform,opacity
}

.swap input {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none
}

.swap .swap-on,.swap .swap-indeterminate,.swap input:indeterminate~.swap-on {
    opacity: 0
}

.swap input:checked~.swap-off,.swap-active .swap-off,.swap input:indeterminate~.swap-off {
    opacity: 0
}

.swap input:checked~.swap-on,.swap-active .swap-on,.swap input:indeterminate~.swap-indeterminate {
    opacity: 1
}

.table {
    position: relative;
    width: 100%;
    border-radius: var(--rounded-box, 1rem);
    text-align: left;
    font-size: .875rem;
    line-height: 1.25rem
}

.table :where(.table-pin-rows thead tr) {
    position: sticky;
    top: 0;
    z-index: 1;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)))
}

.table :where(.table-pin-rows tfoot tr) {
    position: sticky;
    bottom: 0;
    z-index: 1;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)))
}

.table :where(.table-pin-cols tr th) {
    position: sticky;
    left: 0;
    right: 0;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)))
}

.table-zebra tbody tr:nth-child(2n) :where(.table-pin-cols tr th) {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)))
}

.btm-nav>*.disabled,.btm-nav>*[disabled] {
    pointer-events: none;
    --tw-border-opacity: 0;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-bg-opacity: .1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
    --tw-text-opacity: .2
}

.btm-nav>* .label {
    font-size: 1rem;
    line-height: 1.5rem
}

@media (prefers-reduced-motion: no-preference) {
    .btn {
        animation: button-pop var(--animation-btn, .25s) ease-out
    }
}

.btn:active:hover,.btn:active:focus {
    animation: button-pop 0s ease-out;
    transform: scale(var(--btn-focus-scale, .97))
}

@supports not (color: oklch(0% 0 0)) {
    .btn {
        background-color:var(--btn-color, var(--fallback-b2));
        border-color: var(--btn-color, var(--fallback-b2))
    }

    .btn-info {
        --btn-color: var(--fallback-in)
    }
}

@supports (color: color-mix(in oklab,black,black)) {
    .btn-outline.btn-info.btn-active {
        background-color:color-mix(in oklab,var(--fallback-in,oklch(var(--in)/1)) 90%,black);
        border-color: color-mix(in oklab,var(--fallback-in,oklch(var(--in)/1)) 90%,black)
    }
}

.btn:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px
}

@supports (color: oklch(0% 0 0)) {
    .btn-info {
        --btn-color: var(--in)
    }
}

.btn-info {
    --tw-text-opacity: 1;
    color: var(--fallback-inc,oklch(var(--inc)/var(--tw-text-opacity)));
    outline-color: var(--fallback-in,oklch(var(--in)/1))
}

.btn.glass {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow);
    outline-color: currentColor
}

.btn.glass.btn-active {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%
}

.btn-outline.btn-info {
    --tw-text-opacity: 1;
    color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity)))
}

.btn-outline.btn-info.btn-active {
    --tw-text-opacity: 1;
    color: var(--fallback-inc,oklch(var(--inc)/var(--tw-text-opacity)))
}

.btn.btn-disabled,.btn[disabled],.btn:disabled {
    --tw-border-opacity: 0;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-bg-opacity: .2;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
    --tw-text-opacity: .2
}

.btn:is(input[type=checkbox]:checked),.btn:is(input[type=radio]:checked) {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)))
}

.btn:is(input[type=checkbox]:checked):focus-visible,.btn:is(input[type=radio]:checked):focus-visible {
    outline-color: var(--fallback-p,oklch(var(--p)/1))
}

@keyframes button-pop {
    0% {
        transform: scale(var(--btn-focus-scale, .98))
    }

    40% {
        transform: scale(1.02)
    }

    to {
        transform: scale(1)
    }
}

.card :where(figure:first-child) {
    overflow: hidden;
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-start-radius: unset;
    border-end-end-radius: unset
}

.card :where(figure:last-child) {
    overflow: hidden;
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-start-radius: inherit;
    border-end-end-radius: inherit
}

.card:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px
}

.card.bordered {
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)))
}

.card.compact .card-body {
    padding: 1rem;
    font-size: .875rem;
    line-height: 1.25rem
}

.card-title {
    display: flex;
    align-items: center;
    gap: .5rem;
    font-size: 1.25rem;
    line-height: 1.75rem;
    font-weight: 600
}

.card.image-full :where(figure) {
    overflow: hidden;
    border-radius: inherit
}

.checkbox:focus {
    box-shadow: none
}

.checkbox:focus-visible {
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: var(--fallback-bc,oklch(var(--bc)/1))
}

.checkbox:disabled {
    border-width: 0px;
    cursor: not-allowed;
    border-color: transparent;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
    opacity: .2
}

.checkbox:checked,.checkbox[aria-checked=true] {
    background-repeat: no-repeat;
    animation: checkmark var(--animation-input, .2s) ease-out;
    background-color: var(--chkbg);
    background-image: linear-gradient(-45deg,transparent 65%,var(--chkbg) 65.99%),linear-gradient(45deg,transparent 75%,var(--chkbg) 75.99%),linear-gradient(-45deg,var(--chkbg) 40%,transparent 40.99%),linear-gradient(45deg,var(--chkbg) 30%,var(--chkfg) 30.99%,var(--chkfg) 40%,transparent 40.99%),linear-gradient(-45deg,var(--chkfg) 50%,var(--chkbg) 50.99%)
}

.checkbox:indeterminate {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));
    background-repeat: no-repeat;
    animation: checkmark var(--animation-input, .2s) ease-out;
    background-image: linear-gradient(90deg,transparent 80%,var(--chkbg) 80%),linear-gradient(-90deg,transparent 80%,var(--chkbg) 80%),linear-gradient(0deg,var(--chkbg) 43%,var(--chkfg) 43%,var(--chkfg) 57%,var(--chkbg) 57%)
}

@keyframes checkmark {
    0% {
        background-position-y: 5px
    }

    50% {
        background-position-y: -2px
    }

    to {
        background-position-y: 0
    }
}

.divider:not(:empty) {
    gap: 1rem
}

.input input {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)));
    background-color: transparent
}

.input input:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}

.input[list]::-webkit-calendar-picker-indicator {
    line-height: 1em
}

.input:focus,.input:focus-within {
    box-shadow: none;
    border-color: var(--fallback-bc,oklch(var(--bc)/.2));
    outline-style: solid;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: var(--fallback-bc,oklch(var(--bc)/.2))
}

.input:has(>input[disabled]),.input-disabled,.input:disabled,.input[disabled] {
    cursor: not-allowed;
    --tw-border-opacity: 1;
    border-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
    color: var(--fallback-bc,oklch(var(--bc)/.4))
}

.input:has(>input[disabled])::-moz-placeholder,.input-disabled::-moz-placeholder,.input:disabled::-moz-placeholder,.input[disabled]::-moz-placeholder {
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));
    --tw-placeholder-opacity: .2
}

.input:has(>input[disabled])::placeholder,.input-disabled::placeholder,.input:disabled::placeholder,.input[disabled]::placeholder {
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));
    --tw-placeholder-opacity: .2
}

.input:has(>input[disabled])>input[disabled] {
    cursor: not-allowed
}

.input::-webkit-date-and-time-value {
    text-align: inherit
}

.link:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}

.link:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px
}

:where(.menu li:not(.menu-title,.disabled)>*:not(ul,details,.menu-title)):not(summary,.active,.btn).focus,:where(.menu li:not(.menu-title,.disabled)>*:not(ul,details,.menu-title)):not(summary,.active,.btn):focus,:where(.menu li:not(.menu-title,.disabled)>*:not(ul,details,.menu-title)):is(summary):not(.active,.btn):focus-visible,:where(.menu li:not(.menu-title,.disabled)>details>summary:not(.menu-title)):not(summary,.active,.btn).focus,:where(.menu li:not(.menu-title,.disabled)>details>summary:not(.menu-title)):not(summary,.active,.btn):focus,:where(.menu li:not(.menu-title,.disabled)>details>summary:not(.menu-title)):is(summary):not(.active,.btn):focus-visible {
    cursor: pointer;
    background-color: var(--fallback-bc,oklch(var(--bc)/.1));
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
    outline: 2px solid transparent;
    outline-offset: 2px
}

.mockup-code:before {
    content: "";
    margin-bottom: 1rem;
    display: block;
    height: .75rem;
    width: .75rem;
    border-radius: 9999px;
    opacity: .3;
    box-shadow: 1.4em 0,2.8em 0,4.2em 0
}

.mockup-code pre {
    padding-right: 1.25rem
}

.mockup-code pre:before {
    content: "";
    margin-right: 2ch
}

.mockup-window:before {
    content: "";
    margin-bottom: 1rem;
    display: block;
    aspect-ratio: 1 / 1;
    height: .75rem;
    flex-shrink: 0;
    align-self: flex-start;
    border-radius: 9999px;
    opacity: .3;
    box-shadow: 1.4em 0,2.8em 0,4.2em 0
}

:is([dir=rtl] .mockup-window):before {
    align-self: flex-end
}

.mockup-phone .display {
    overflow: hidden;
    border-radius: 40px;
    margin-top: -25px
}

.mockup-browser .mockup-browser-toolbar .input {
    position: relative;
    margin-left: auto;
    margin-right: auto;
    display: block;
    height: 1.75rem;
    width: 24rem;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));
    padding-left: 2rem;
    direction: ltr
}

.mockup-browser .mockup-browser-toolbar .input:before {
    content: "";
    position: absolute;
    left: .5rem;
    top: 50%;
    aspect-ratio: 1 / 1;
    height: .75rem;
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-radius: 9999px;
    border-width: 2px;
    border-color: currentColor;
    opacity: .6
}

.mockup-browser .mockup-browser-toolbar .input:after {
    content: "";
    position: absolute;
    left: 1.25rem;
    top: 50%;
    height: .5rem;
    --tw-translate-y: 25%;
    --tw-rotate: -45deg;
    transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-radius: 9999px;
    border-width: 1px;
    border-color: currentColor;
    opacity: .6
}

.modal:not(dialog:not(.modal-open)),.modal::backdrop {
    background-color: #0006;
    animation: modal-pop .2s ease-out
}

.modal-open .modal-box,.modal-toggle:checked+.modal .modal-box,.modal:target .modal-box,.modal[open] .modal-box {
    --tw-translate-y: 0px;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

@keyframes modal-pop {
    0% {
        opacity: 0
    }
}

@keyframes progress-loading {
    50% {
        background-position-x: -115%
    }
}

@keyframes radiomark {
    0% {
        box-shadow: 0 0 0 12px var(--fallback-b1,oklch(var(--b1)/1)) inset,0 0 0 12px var(--fallback-b1,oklch(var(--b1)/1)) inset
    }

    50% {
        box-shadow: 0 0 0 3px var(--fallback-b1,oklch(var(--b1)/1)) inset,0 0 0 3px var(--fallback-b1,oklch(var(--b1)/1)) inset
    }

    to {
        box-shadow: 0 0 0 4px var(--fallback-b1,oklch(var(--b1)/1)) inset,0 0 0 4px var(--fallback-b1,oklch(var(--b1)/1)) inset
    }
}

@keyframes rating-pop {
    0% {
        transform: translateY(-.125em)
    }

    40% {
        transform: translateY(-.125em)
    }

    to {
        transform: translateY(0)
    }
}

@keyframes skeleton {
    0% {
        background-position: 150%
    }

    to {
        background-position: -50%
    }
}

:where(.stats)>:not([hidden])~:not([hidden]) {
    --tw-divide-x-reverse: 0;
    border-right-width: calc(1px * var(--tw-divide-x-reverse));
    border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
    --tw-divide-y-reverse: 0;
    border-top-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
    border-bottom-width: calc(0px * var(--tw-divide-y-reverse))
}

:is([dir=rtl] .stats>:not([hidden])~:not([hidden])) {
    --tw-divide-x-reverse: 1
}

.steps .step:before {
    top: 0;
    grid-column-start: 1;
    grid-row-start: 1;
    height: .5rem;
    width: 100%;
    transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));
    content: "";
    margin-inline-start:-100%}

.steps .step:after {
    content: counter(step);
    counter-increment: step;
    z-index: 1;
    position: relative;
    grid-column-start: 1;
    grid-row-start: 1;
    display: grid;
    height: 2rem;
    width: 2rem;
    place-items: center;
    place-self: center;
    border-radius: 9999px;
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)))
}

.steps .step:first-child:before {
    content: none
}

.steps .step[data-content]:after {
    content: attr(data-content)
}

.steps .step-neutral+.step-neutral:before,.steps .step-neutral:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)))
}

.steps .step-primary+.step-primary:before,.steps .step-primary:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)))
}

.steps .step-secondary+.step-secondary:before,.steps .step-secondary:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-s,oklch(var(--s)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity)))
}

.steps .step-accent+.step-accent:before,.steps .step-accent:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-a,oklch(var(--a)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-ac,oklch(var(--ac)/var(--tw-text-opacity)))
}

.steps .step-info+.step-info:before {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-in,oklch(var(--in)/var(--tw-bg-opacity)))
}

.steps .step-info:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-in,oklch(var(--in)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-inc,oklch(var(--inc)/var(--tw-text-opacity)))
}

.steps .step-success+.step-success:before {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity)))
}

.steps .step-success:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity)))
}

.steps .step-warning+.step-warning:before {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity)))
}

.steps .step-warning:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-wac,oklch(var(--wac)/var(--tw-text-opacity)))
}

.steps .step-error+.step-error:before {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity)))
}

.steps .step-error:after {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity)));
    --tw-text-opacity: 1;
    color: var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity)))
}

.swap-rotate .swap-on,.swap-rotate .swap-indeterminate,.swap-rotate input:indeterminate~.swap-on {
    --tw-rotate: 45deg;
    transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.swap-rotate input:checked~.swap-off,.swap-active:where(.swap-rotate) .swap-off,.swap-rotate input:indeterminate~.swap-off {
    --tw-rotate: -45deg;
    transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.swap-rotate input:checked~.swap-on,.swap-active:where(.swap-rotate) .swap-on,.swap-rotate input:indeterminate~.swap-indeterminate {
    --tw-rotate: 0deg;
    transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.swap-flip .swap-on,.swap-flip .swap-indeterminate,.swap-flip input:indeterminate~.swap-on {
    transform: rotateY(180deg);
    backface-visibility: hidden;
    opacity: 1
}

.swap-flip input:checked~.swap-off,.swap-active:where(.swap-flip) .swap-off,.swap-flip input:indeterminate~.swap-off {
    transform: rotateY(-180deg);
    backface-visibility: hidden;
    opacity: 1
}

.swap-flip input:checked~.swap-on,.swap-active:where(.swap-flip) .swap-on,.swap-flip input:indeterminate~.swap-indeterminate {
    transform: rotateY(0)
}

:is([dir=rtl] .table) {
    text-align: right
}

.table :where(th,td) {
    padding: .75rem 1rem;
    vertical-align: middle
}

.table tr.active,.table tr.active:nth-child(2n),.table-zebra tbody tr:nth-child(2n) {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)))
}

.table-zebra tr.active,.table-zebra tr.active:nth-child(2n),.table-zebra-zebra tbody tr:nth-child(2n) {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)))
}

.table :where(thead tr,tbody tr:not(:last-child),tbody tr:first-child:last-child) {
    border-bottom-width: 1px;
    --tw-border-opacity: 1;
    border-bottom-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)))
}

.table :where(thead,tfoot) {
    white-space: nowrap;
    font-size: .75rem;
    line-height: 1rem;
    font-weight: 700;
    color: var(--fallback-bc,oklch(var(--bc)/.6))
}

.table :where(tfoot) {
    border-top-width: 1px;
    --tw-border-opacity: 1;
    border-top-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)))
}

@keyframes toast-pop {
    0% {
        transform: scale(.9);
        opacity: 0
    }

    to {
        transform: scale(1);
        opacity: 1
    }
}

.btn-sm {
    height: 2rem;
    min-height: 2rem;
    padding-left: .75rem;
    padding-right: .75rem;
    font-size: .875rem
}

.btn-square:where(.btn-sm) {
    height: 2rem;
    width: 2rem;
    padding: 0
}

.btn-circle:where(.btn-xs) {
    height: 1.5rem;
    width: 1.5rem;
    border-radius: 9999px;
    padding: 0
}

.btn-circle:where(.btn-sm) {
    height: 2rem;
    width: 2rem;
    border-radius: 9999px;
    padding: 0
}

.btn-circle:where(.btn-md) {
    height: 3rem;
    width: 3rem;
    border-radius: 9999px;
    padding: 0
}

.btn-circle:where(.btn-lg) {
    height: 4rem;
    width: 4rem;
    border-radius: 9999px;
    padding: 0
}

.modal-bottom {
    place-items: end
}

.stats-vertical {
    grid-auto-flow: row
}

.steps-horizontal .step {
    display: grid;
    grid-template-columns: repeat(1,minmax(0,1fr));
    grid-template-rows: repeat(2,minmax(0,1fr));
    place-items: center;
    text-align: center
}

.steps-vertical .step {
    display: grid;
    grid-template-columns: repeat(2,minmax(0,1fr));
    grid-template-rows: repeat(1,minmax(0,1fr))
}

.tooltip {
    position: relative;
    display: inline-block;
    --tooltip-offset: calc(100% + 1px + var(--tooltip-tail, 0px))
}

.tooltip:before {
    position: absolute;
    pointer-events: none;
    z-index: 1;
    content: var(--tw-content);
    --tw-content: attr(data-tip)
}

.tooltip:before,.tooltip-top:before {
    transform: translate(-50%);
    top: auto;
    left: 50%;
    right: auto;
    bottom: var(--tooltip-offset)
}

.tooltip-right:before {
    transform: translateY(-50%);
    top: 50%;
    left: var(--tooltip-offset);
    right: auto;
    bottom: auto
}

.card-compact .card-body {
    padding: 1rem;
    font-size: .875rem;
    line-height: 1.25rem
}

.card-compact .card-title {
    margin-bottom: .25rem
}

.card-normal .card-body {
    padding: var(--padding-card, 2rem);
    font-size: 1rem;
    line-height: 1.5rem
}

.card-normal .card-title {
    margin-bottom: .75rem
}

.modal-top :where(.modal-box) {
    width: 100%;
    max-width: none;
    --tw-translate-y: -2.5rem;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-bottom-right-radius: var(--rounded-box, 1rem);
    border-bottom-left-radius: var(--rounded-box, 1rem);
    border-top-left-radius: 0;
    border-top-right-radius: 0
}

.modal-middle :where(.modal-box) {
    width: 91.666667%;
    max-width: 32rem;
    --tw-translate-y: 0px;
    --tw-scale-x: .9;
    --tw-scale-y: .9;
    transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-top-left-radius: var(--rounded-box, 1rem);
    border-top-right-radius: var(--rounded-box, 1rem);
    border-bottom-right-radius: var(--rounded-box, 1rem);
    border-bottom-left-radius: var(--rounded-box, 1rem)
}

.modal-bottom :where(.modal-box) {
    width: 100%;
    max-width: none;
    --tw-translate-y: 2.5rem;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    border-top-left-radius: var(--rounded-box, 1rem);
    border-top-right-radius: var(--rounded-box, 1rem);
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0
}

.stats-vertical>:not([hidden])~:not([hidden]) {
    --tw-divide-x-reverse: 0;
    border-right-width: calc(0px * var(--tw-divide-x-reverse));
    border-left-width: calc(0px * calc(1 - var(--tw-divide-x-reverse)));
    --tw-divide-y-reverse: 0;
    border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    border-bottom-width: calc(1px * var(--tw-divide-y-reverse))
}

.stats-vertical {
    overflow-y: auto
}

.steps-horizontal .step {
    grid-template-rows: 40px 1fr;
    grid-template-columns: auto;
    min-width: 4rem
}

.steps-horizontal .step:before {
    height: .5rem;
    width: 100%;
    --tw-translate-x: 0px;
    --tw-translate-y: 0px;
    transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    content: "";
    margin-inline-start:-100%}

:is([dir=rtl] .steps-horizontal .step):before {
    --tw-translate-x: 0px;
    transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.steps-vertical .step {
    gap: .5rem;
    grid-template-columns: 40px 1fr;
    grid-template-rows: auto;
    min-height: 4rem;
    justify-items: start
}

.steps-vertical .step:before {
    height: 100%;
    width: .5rem;
    --tw-translate-x: -50%;
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
    margin-inline-start:50%}

:is([dir=rtl] .steps-vertical .step):before {
    --tw-translate-x: 50%;
    transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.tooltip {
    position: relative;
    display: inline-block;
    text-align: center;
    --tooltip-tail: .1875rem;
    --tooltip-color: var(--fallback-n,oklch(var(--n)/1));
    --tooltip-text-color: var(--fallback-nc,oklch(var(--nc)/1));
    --tooltip-tail-offset: calc(100% + .0625rem - var(--tooltip-tail))
}

.tooltip:before,.tooltip:after {
    opacity: 0;
    transition-property: color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;
    transition-property: color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;
    transition-property: color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;
    transition-delay: .1s;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(.4,0,.2,1)
}

.tooltip:after {
    position: absolute;
    content: "";
    border-style: solid;
    border-width: var(--tooltip-tail, 0);
    width: 0;
    height: 0;
    display: block
}

.tooltip:before {
    max-width: 20rem;
    border-radius: .25rem;
    padding: .25rem .5rem;
    font-size: .875rem;
    line-height: 1.25rem;
    background-color: var(--tooltip-color);
    color: var(--tooltip-text-color);
    width: -moz-max-content;
    width: max-content
}

.tooltip.tooltip-open:before {
    opacity: 1;
    transition-delay: 75ms
}

.tooltip.tooltip-open:after {
    opacity: 1;
    transition-delay: 75ms
}

.tooltip:hover:before {
    opacity: 1;
    transition-delay: 75ms
}

.tooltip:hover:after {
    opacity: 1;
    transition-delay: 75ms
}

.tooltip:has(:focus-visible):after,.tooltip:has(:focus-visible):before {
    opacity: 1;
    transition-delay: 75ms
}

.tooltip:not([data-tip]):hover:before,.tooltip:not([data-tip]):hover:after {
    visibility: hidden;
    opacity: 0
}

.tooltip:after,.tooltip-top:after {
    transform: translate(-50%);
    border-color: var(--tooltip-color) transparent transparent transparent;
    top: auto;
    left: 50%;
    right: auto;
    bottom: var(--tooltip-tail-offset)
}

.tooltip-right:after {
    transform: translateY(-50%);
    border-color: transparent var(--tooltip-color) transparent transparent;
    top: 50%;
    left: calc(var(--tooltip-tail-offset) + .0625rem);
    right: auto;
    bottom: auto
}

.fixed {
    position: fixed
}

.sticky {
    position: sticky
}

.left-6 {
    left: 1.5rem
}

.right-0 {
    right: 0
}

.right-2 {
    right: .5rem
}

.right-6 {
    right: 1.5rem
}

.top-2 {
    top: .5rem
}

.top-5 {
    top: 1.25rem
}

.z-10 {
    z-index: 10
}

.m-0 {
    margin: 0
}

.m-1 {
    margin: .25rem
}

.m-2 {
    margin: .5rem
}

.m-6 {
    margin: 1.5rem
}

.mx-6 {
    margin-left: 1.5rem;
    margin-right: 1.5rem
}

.mx-auto {
    margin-left: auto;
    margin-right: auto
}

.my-12 {
    margin-top: 3rem;
    margin-bottom: 3rem
}

.mb-3 {
    margin-bottom: .75rem
}

.mb-6 {
    margin-bottom: 1.5rem
}

.ml-2 {
    margin-left: .5rem
}

.mt-12 {
    margin-top: 3rem
}

.flex {
    display: flex
}

.inline-flex {
    display: inline-flex
}

.table {
    display: table
}

.contents {
    display: contents
}

.h-0 {
    height: 0px
}

.h-6 {
    height: 1.5rem
}

.h-8 {
    height: 2rem
}

.h-\[250px\] {
    height: 250px
}

.max-h-\[200px\] {
    max-height: 200px
}

.max-h-\[50\%\] {
    max-height: 50%
}

.max-h-\[75px\] {
    max-height: 75px
}

.min-h-\[150px\] {
    min-height: 150px
}

.min-h-\[450px\] {
    min-height: 450px
}

.min-h-\[75px\] {
    min-height: 75px
}

.min-h-full {
    min-height: 100%
}

.min-h-screen {
    min-height: 100vh
}

.w-6 {
    width: 1.5rem
}

.w-8 {
    width: 2rem
}

.w-96 {
    width: 24rem
}

.w-full {
    width: 100%
}

.\!min-w-\[330px\] {
    min-width: 330px!important
}

.min-w-\[1rem\] {
    min-width: 1rem
}

.min-w-\[320px\] {
    min-width: 320px
}

.min-w-full {
    min-width: 100%
}

.max-w-\[100vw\] {
    max-width: 100vw
}

.max-w-\[320px\] {
    max-width: 320px
}

.max-w-\[330px\] {
    max-width: 330px
}

.max-w-full {
    max-width: 100%
}

.max-w-md {
    max-width: 28rem
}

.max-w-screen-xl {
    max-width: 1280px
}

.transform {
    transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

@keyframes text {
    0%,to {
        background-size: 200% 200%;
        background-position: left center
    }

    50% {
        background-size: 200% 200%;
        background-position: right center
    }
}

.animate-text {
    animation: text 3s ease infinite
}

.cursor-pointer {
    cursor: pointer
}

.grid-flow-col {
    grid-auto-flow: column
}

.flex-col {
    flex-direction: column
}

.flex-wrap {
    flex-wrap: wrap
}

.items-center {
    align-items: center
}

.justify-start {
    justify-content: flex-start
}

.justify-end {
    justify-content: flex-end
}

.justify-center {
    justify-content: center
}

.justify-between {
    justify-content: space-between
}

.justify-around {
    justify-content: space-around
}

.justify-evenly {
    justify-content: space-evenly
}

.gap-2 {
    gap: .5rem
}

.gap-4 {
    gap: 1rem
}

.gap-6 {
    gap: 1.5rem
}

.overflow-x-auto {
    overflow-x: auto
}

.overflow-x-hidden {
    overflow-x: hidden
}

.rounded-box {
    border-radius: var(--rounded-box, 1rem)
}

.rounded-full {
    border-radius: 9999px
}

.rounded-xl {
    border-radius: .75rem
}

.border-t {
    border-top-width: 1px
}

.border-base-300 {
    --tw-border-opacity: 1;
    border-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-border-opacity)))
}

.bg-base-100 {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)))
}

.bg-base-200 {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)))
}

.bg-base-300 {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)))
}

.bg-neutral {
    --tw-bg-opacity: 1;
    background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)))
}

.bg-gradient-to-r {
    background-image: linear-gradient(to right,var(--tw-gradient-stops))
}

.from-\[\#048eaa\] {
    --tw-gradient-from: #048eaa var(--tw-gradient-from-position);
    --tw-gradient-to: rgb(4 142 170 / 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)
}

.via-blue-500 {
    --tw-gradient-to: rgb(59 130 246 / 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), #3b82f6 var(--tw-gradient-via-position), var(--tw-gradient-to)
}

.to-\[\#048eaa\] {
    --tw-gradient-to: #048eaa var(--tw-gradient-to-position)
}

.bg-clip-text {
    -webkit-background-clip: text;
    background-clip: text
}

.fill-current {
    fill: currentColor
}

.object-contain {
    -o-object-fit: contain;
    object-fit: contain
}

.object-cover {
    -o-object-fit: cover;
    object-fit: cover
}

.p-4 {
    padding: 1rem
}

.py-6 {
    padding-top: 1.5rem;
    padding-bottom: 1.5rem
}

.pt-6 {
    padding-top: 1.5rem
}

.text-left {
    text-align: left
}

.text-center {
    text-align: center
}

.text-2xl {
    font-size: 1.5rem;
    line-height: 2rem
}

.text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem
}

.text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem
}

.text-5xl {
    font-size: 3rem;
    line-height: 1
}

.text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem
}

.text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem
}

.font-bold {
    font-weight: 700
}

.leading-normal {
    line-height: 1.5
}

.text-blue-400 {
    --tw-text-opacity: 1;
    color: rgb(96 165 250 / var(--tw-text-opacity))
}

.text-blue-500 {
    --tw-text-opacity: 1;
    color: rgb(59 130 246 / var(--tw-text-opacity))
}

.text-info {
    --tw-text-opacity: 1;
    color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity)))
}

.text-inherit {
    color: inherit
}

.text-neutral-content {
    --tw-text-opacity: 1;
    color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)))
}

.text-secondary {
    --tw-text-opacity: 1;
    color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity)))
}

.text-success {
    --tw-text-opacity: 1;
    color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity)))
}

.text-transparent {
    color: transparent
}

.no-underline {
    text-decoration-line: none
}

.shadow {
    --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);
    --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)
}

.shadow-xl {
    --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / .1), 0 8px 10px -6px rgb(0 0 0 / .1);
    --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)
}

.filter {
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)
}

.transition {
    transition-property: color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;
    transition-property: color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;
    transition-property: color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(.4,0,.2,1);
    transition-duration: .15s
}

.duration-300 {
    transition-duration: .3s
}

.content-\[\'\'\]{--tw-content: "";content:var(--tw-content)}html,*{font-family:Work Sans,sans-serif}@media (min-width: 640px){.sm\:modal-action{display:flex;margin-top:1.5rem;justify-content:flex-end}.sm\:modal-action>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}}@media (min-width: 768px){.md\:steps-vertical{grid-auto-rows:1fr;grid-auto-flow:row}.md\:steps-vertical .step{display:grid;grid-template-columns:repeat(2,minmax(0,1fr));grid-template-rows:repeat(1,minmax(0,1fr));gap:.5rem;grid-template-columns:40px 1fr;grid-template-rows:auto;min-height:4rem;justify-items:start}.md\:steps-vertical .step:before{height:100%;width:.5rem;--tw-translate-x: -50%;--tw-translate-y: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));margin-inline-start:50%}:is([dir=rtl] .md\:steps-vertical .step):before{--tw-translate-x: 50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.md\:min-w-\[400px\]{min-width:400px}.md\:place-self-center{place-self:center}.md\:justify-self-end{justify-self:end}}@media (min-width: 1024px){.lg\:mx-auto{margin-left:auto;margin-right:auto}.lg\:max-h-\[75\%\]{max-height:75%}.lg\:min-w-\[400px\]{min-width:400px}.lg\:max-w-screen-xl{max-width:1280px}.lg\:flex-row{flex-direction:row}.lg\:justify-end{justify-content:flex-end}}